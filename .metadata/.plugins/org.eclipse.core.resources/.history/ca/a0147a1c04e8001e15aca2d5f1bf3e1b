import java.util.List;
import java.util.Scanner;

import javax.persistence.Query;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

import Model.AccountTest;
import Model.BranchTest;
import Model.CustomerTest;

public class JavaMainClass {
public static void main(String[] args) {
	Configuration configuration=new Configuration().configure()
			.addAnnotatedClass(BranchTest.class).addAnnotatedClass(CustomerTest.class).addAnnotatedClass(AccountTest.class);
	SessionFactory sessionFactory=configuration.buildSessionFactory();
	Session session=sessionFactory.openSession();
	Transaction transaction=session.beginTransaction();
	
//	addData(session,transaction);//Question 1
//	updateContactNumber(session,transaction);//Question 2
	displaytotalcustomersameBranch(session,transaction);
	
	sessionFactory.close();
}

private static void displaytotalcustomersameBranch(Session session, Transaction transaction) {
	String query="from CustomerTest a join a.branchRef c";
	Query query_data=session.createQuery(query);
	List<Object[]> result =query_data.getResultList();
	BranchTest b=null;
	int count=0;
	for(Object[] o:result) {
		BranchTest branch=(BranchTest) o[1];
		CustomerTest cust_data=(CustomerTest) o[0];
		if(branch==cust_data.getbranchRef()) {
			count++;
			
		}else {
//			if(b!=null) {
			System.out.println(branch.getBid()+"----"+branch.getBrname());
			System.out.println("Total Count="+count);
			count=0;
			b=branch;
//			}
		}
		
	}
	session.close();
}

private static void updateContactNumber(Session session, Transaction transaction) {
	Scanner sc=new Scanner(System.in);
	System.out.println("Enter Customer number:");
	int number=sc.nextInt();
	System.out.println("Enter Account number:");
	long acc=sc.nextLong();
	
	
	Criteria c=session.createCriteria(CustomerTest.class);
	boolean updated=false;
	List<CustomerTest> result1=c.list();
	for(CustomerTest o:result1) {
		if(o.getCno()==number) {
			List<AccountTest> acc_data=(List<AccountTest>) o.getAccountList();
			for(AccountTest a:acc_data) {
				if(a.getA_no()==acc) {
					System.out.println("Enter Contact number:");
					a.setContact_number(sc.nextLong());
					session.persist(a);
					updated=true;
					
				}
			}
			}
		}
	if(updated)System.out.println("data updated...");
	else System.out.println("inproper data...");

	
	transaction.commit();
	session.close();
}

private static void addData(Session session, Transaction transaction) {
	BranchTest b=new BranchTest();
	Scanner sc=new Scanner(System.in);
	
	System.out.println("===================Insert Data===================");
	System.out.println("Enter your Branch Name:");
	b.setBrname(sc.next());
	System.out.println("Enter your Branch City:");
	b.setBrcity(sc.next());

	System.out.println("================Add Customer to your Branch");
	boolean addmorecutomer=true;
	while(addmorecutomer) {
		CustomerTest c=new CustomerTest();
		System.out.println("Enter Customer name:");
		c.setCname(sc.next());
		System.out.println("Enter Customer City:");
		c.setCity(sc.next());
		System.out.println("Do you want to enter more customer (true/false):");
		addmorecutomer=(sc.nextBoolean())?true:false;
		b.addCustomer(c);
	}
	
	System.out.println("================Add Account to customer");
	boolean addmoreAccount=true;
	while(addmoreAccount) {
		AccountTest a=new AccountTest();
		System.out.println("Enter customer Name your want to open Account");
		String name=sc.next();
		List<CustomerTest> c=b.getCustomerList();
		CustomerTest found=null;
		for(CustomerTest c1:c) {
			if(c1.getCname().equalsIgnoreCase(name)) {
				found=c1;
			}
		}
		if(found==null)System.out.println("Could not found customer please enter correct data....");
		else {
			System.out.println("Enter Account number:");
			a.setA_no(sc.nextLong());
			System.out.println("Enter Account Type:");
			a.setA_type(sc.next());
			System.out.println("Enter Contact number:");
			a.setContact_number(sc.nextLong());
			System.out.println("Enter Account Balance:");
			a.setBalance(sc.nextDouble());
			found.addAccount(a);
		}
		System.out.println("Do you want to enter more Account (true/false):");
		addmoreAccount=(sc.nextBoolean())?true:false;
	}
	
	session.persist(b);
	transaction.commit();
	session.close();
	
}
}
